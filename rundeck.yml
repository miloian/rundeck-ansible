---
- name: Install Rundeck
  hosts: all
  gather_facts: true
  remote_user: root
  tasks:

    - name: Package installation (base)
      yum:
        name:
          - java-1.8.0-openjdk
        state: present
      tags: yum

    - name: Add Rundeck Repo
      yum:
        name: https://repo.rundeck.org/latest.rpm
        state: present
      tags: yum

    - name: Package installation (rundeck)
      yum:
        name:
          - rundeck
          - rundeck-cli
        state: present
      tags: yum

    - name: Add EPEL Repo
      yum:
        name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
        state: present
      tags: yum

    - name: Package installation (epel)
      yum:
        name:
          - python2-pip
          - python2-psycopg2
        state: present
      tags: yum

    - name: Add Postgres Repo
      yum:
        name: https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm
        state: present
      tags: yum

    - name: Package installation (postgres)
      yum:
        name:
          - postgresql10-server
        state: present
      tags: yum

    - pip:
        name:
          - boto3
          - awscli
      tags: yum

    - name: PostgreSQL | Init server
      command: /usr/pgsql-10/bin/postgresql-10-setup initdb
      ignore_errors: yes

    - name: PostgreSQL | wait for server to init
      command: sleep 5

    - template:
        src: templates/psql/pg_hba.conf.j2
        dest: /var/lib/pgsql/10/data/pg_hba.conf
        owner: postgres
        group: postgres
        mode: 0700

    - name: PostgreSQL | Start service
      service:
        name: postgresql-10.service
        enabled: yes
        state: restarted

    - name: PostgreSQL | Create Rundeck Database
      become: yes
      become_user: postgres
      postgresql_db:
        name: "{{ rd_db_name }}"
    
    - name: PostgreSQL | Create Rundeck user
      become: yes
      become_user: postgres
      postgresql_user:
        name: "{{ rd_db_user }}"
        password: "{{ rd_db_password }}"

    - name: PostgreSQL | Grant rundeck user ALL on rundeck database
      become: true
      become_user: postgres
      postgresql_privs:
        db: postgres
        privs: ALL
        type: database
        obj: "{{ rd_db_name }}"
        role: "{{ rd_db_user }}"

    - template:
        src: templates/rundeck/framework.properties.j2
        dest: /etc/rundeck/framework.properties
        owner: rundeck
        group: rundeck
        mode: 0640
        backup: yes

    - template:
        src: templates/rundeck/rundeck-config.properties.j2
        dest: /etc/rundeck/rundeck-config.properties
        owner: rundeck
        group: rundeck
        mode: 0640
        backup: yes

    - template:
        src: templates/rundeck/realm.properties.j2
        dest: /etc/rundeck/realm.properties
        owner: rundeck
        group: rundeck
        mode: 0640
        backup: yes

    - name: Install AWS EC2 Nodes rundeck plugin
      get_url:
        url: https://github.com/rundeck-plugins/rundeck-ec2-nodes-plugin/releases/download/v1.5.12/rundeck-ec2-nodes-plugin-1.5.12.jar
        dest: /var/lib/rundeck/libext/rundeck-ec2-nodes-plugin-1.5.12.jar
        mode: 0644
      become: true
      become_user: rundeck

    - template:
        src: templates/rundeck/bash_profile.j2
        dest: /var/lib/rundeck/.bash_profile
        owner: rundeck
        group: rundeck
        mode: 0644
        backup: yes

    - name: Create Scripts folder
      file:
        path: /var/lib/rundeck/scripts
        state: directory
        owner: rundeck
        group: rundeck
        mode: '0755'

    - name: Copy commands.py script for startup and shutdown of EC2 nodes
      copy:
        src: files/rundeck/command.py
        dest: /var/lib/rundeck/scripts/command.py
        owner: rundeck
        group: rundeck
        mode: '0755'

    - name: Start Rundeck
      service:
        name: rundeckd
        enabled: yes
        state: restarted

    - name: Allow Rundeck through Firewall
      firewalld:
        port: 4440/tcp
        permanent: true
        state: enabled

    - name: Bounce firewalld
      command: firewall-cmd --reload

    - name: Wait for Rundeck to start
      command: sleep 60

    - name: Create Project
      shell: source /var/lib/rundeck/.bash_profile && rd projects create -p "{{ rd_project_name }}"
      become: true
      become_user: rundeck
      args:
        executable: /bin/bash
      tags: project

    - name: Copy Rundeck project config
      template:
        src: templates/rundeck/config.properties.j2
        dest: /tmp/config.properties
        owner: rundeck
        group: rundeck
        mode: '0755'
      tags: project

    - name: Configure project
      shell: source /var/lib/rundeck/.bash_profile && rd projects configure set -p "{{ rd_project_name }}" -F properties -f /tmp/config.properties
      tags: project

    - name: Remove job config file
      file:
        path: /tmp/config.properties
        state: absent
      tags: project

    - name: Create temporary jobs folder
      file:
        path: /tmp/rd_jobs
        state: directory
        owner: rundeck
        group: rundeck
        mode: '0777'
      tags: project

    - name: Copy jobs to server
      copy:
        src: "{{ item }}"
        dest: /tmp/rd_jobs/
        owner: rundeck
        group: rundeck
        mode: '0777'
      with_fileglob:
        - files/rundeck/jobs/*.yaml
      tags: project
    
    - name: Find jobs in server directory
      shell: find /tmp/rd_jobs/ -type f -name *.yaml
      register: rundeck_jobs
      tags: project

    - name: Import jobs to Rundeck Project
      shell: source /var/lib/rundeck/.bash_profile && rd jobs load -f "{{ item }}" -F yaml -p "{{ rd_project_name }}" -r
      become: true
      become_user: rundeck
      args:
        executable: /bin/bash
      with_items: "{{ rundeck_jobs.stdout_lines }}"
      tags: project

    - name: Clean up after Rundeck jobs import
      file:
        path: /tmp/rd_jobs/
        state: absent
      tags: project

